#!/usr/bin/env python3
"""
Script de test pour la d√©tection automatique du Nikon D800
"""

import subprocess
import os
import time

def test_gphoto2_detection():
    """Test la d√©tection du D800 avec gphoto2"""
    print("=== Test de d√©tection du Nikon D800 ===\n")
    
    print("1. Recherche des cam√©ras connect√©es...")
    try:
        result = subprocess.run(['gphoto2', '--auto-detect'], 
                              capture_output=True, text=True, timeout=10)
        print("Sortie gphoto2:")
        print(result.stdout)
        
        if "D800" in result.stdout or "Nikon" in result.stdout:
            print("‚úÖ Nikon D800 d√©tect√©!")
            return True
        elif "Model" in result.stdout and len(result.stdout.strip().split('\n')) > 2:
            print("‚úÖ Cam√©ra d√©tect√©e (pas forc√©ment D800)")
            return True
        else:
            print("‚ùå Aucune cam√©ra d√©tect√©e")
            print("V√©rifiez que:")
            print("- Le D800 est allum√©")
            print("- Le c√¢ble USB est connect√©")
            print("- La cam√©ra est en mode PTP/MTP")
            return False
            
    except Exception as e:
        print(f"‚ùå Erreur: {e}")
        return False

def test_camera_capabilities():
    """Test les capacit√©s de la cam√©ra"""
    print("\n2. Test des capacit√©s de la cam√©ra...")
    try:
        result = subprocess.run(['gphoto2', '--abilities'], 
                              capture_output=True, text=True, timeout=15)
        if result.returncode == 0:
            print("‚úÖ Capacit√©s de la cam√©ra:")
            # Afficher seulement les lignes importantes
            lines = result.stdout.split('\n')
            for line in lines:
                if any(keyword in line.lower() for keyword in ['model', 'driver', 'capture', 'config']):
                    print(f"  {line}")
        else:
            print("‚ùå Impossible d'obtenir les capacit√©s")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

def test_file_listing():
    """Test du listage des fichiers sur la cam√©ra"""
    print("\n3. Test du listage des fichiers...")
    try:
        result = subprocess.run(['gphoto2', '--list-files'], 
                              capture_output=True, text=True, timeout=20)
        if result.returncode == 0:
            lines = result.stdout.split('\n')
            image_files = [line for line in lines if any(ext in line.lower() 
                          for ext in ['.jpg', '.jpeg', '.nef', '.raw'])]
            
            if image_files:
                print(f"‚úÖ {len(image_files)} fichier(s) image trouv√©(s):")
                for i, file_line in enumerate(image_files[:5]):  # Afficher max 5
                    print(f"  {file_line.strip()}")
                if len(image_files) > 5:
                    print(f"  ... et {len(image_files) - 5} autres")
            else:
                print("‚ÑπÔ∏è Aucun fichier image sur la cam√©ra")
        else:
            print("‚ùå Impossible de lister les fichiers")
            print(f"Erreur: {result.stderr}")
    except Exception as e:
        print(f"‚ùå Erreur: {e}")

def test_download():
    """Test de t√©l√©chargement"""
    print("\n4. Test de t√©l√©chargement (simulation)...")
    
    # Cr√©er un dossier de test
    test_dir = "/tmp/test_d800"
    os.makedirs(test_dir, exist_ok=True)
    
    try:
        # Compter les fichiers avant
        files_before = set(os.listdir(test_dir))
        
        print(f"Dossier de test: {test_dir}")
        print("Tentative de t√©l√©chargement des nouvelles photos...")
        
        result = subprocess.run([
            'gphoto2', 
            '--get-all-files',
            '--skip-existing',
            '--filename', os.path.join(test_dir, '%f')
        ], capture_output=True, text=True, timeout=60)
        
        # Compter les fichiers apr√®s
        files_after = set(os.listdir(test_dir))
        new_files = files_after - files_before
        
        if new_files:
            print(f"‚úÖ {len(new_files)} fichier(s) t√©l√©charg√©(s):")
            for file in new_files:
                print(f"  {file}")
        else:
            print("‚ÑπÔ∏è Aucun nouveau fichier t√©l√©charg√© (peut-√™tre d√©j√† pr√©sents)")
            
        if result.stderr:
            print(f"Messages: {result.stderr}")
            
    except Exception as e:
        print(f"‚ùå Erreur lors du t√©l√©chargement: {e}")

if __name__ == "__main__":
    print("üîç Test de compatibilit√© Nikon D800 avec gphoto2\n")
    
    if test_gphoto2_detection():
        test_camera_capabilities()
        test_file_listing()
        test_download()
    
    print("\n" + "="*50)
    print("üìã R√âSUM√â:")
    print("Si votre D800 est d√©tect√©, le syst√®me peut:")
    print("‚úÖ D√©tecter automatiquement les nouvelles photos")
    print("‚úÖ Les t√©l√©charger vers /tmp/photos")
    print("‚úÖ Les envoyer automatiquement vers votre serveur FTP")
    print("‚úÖ Supprimer les photos apr√®s envoi (si configur√©)")
    print("\nConnectez votre D800 et relancez ce test !")
